local config = require "laubwald.config"
-- TODO: DELETE
local Highlights = {}

function Highlights.set_highlights(colors)
    local highlights = {
        Normal = { fg = colors.fg, bg = colors.bg },
        SignColumn = { bg = colors.bg },
        MsgArea = { fg = colors.fg, bg = colors.bg },
        ModeMsg = { fg = colors.fg, bg = colors.bg },
        MsgSeparator = { fg = colors.fg, bg = colors.bg },
        SpellBad = { italic = config.options.underline, undercurl = config.options.undercurl },
        SpellCap = { fg = colors.color03, undercurl = config.options.undercurl },
        SpellLocal = { fg = colors.color02, undercurl = config.options.undercurl },
        SpellRare = { fg = colors.color05, italic = config.options.underline, undercurl = config.options.undercurl },
        NormalNC = { fg = colors.fg, bg = colors.bg },
        Pmenu = { fg = colors.color07, bg = colors.bg, sp = "NONE" },
        PmenuSel = { fg = colors.bg, bg = colors.color04 },
        WildMenu = { fg = colors.fg, bg = colors.color04 },
        CursorLineNr = { fg = colors.color00, italic = config.options.bold },
        Comment = { fg = colors.color08, italic = config.options.italics },
        Folded = { fg = colors.color00, bg = colors.color00 },
        FoldColumn = { fg = colors.color00, bg = colors.color00 },
        LineNr = { fg = colors.color08 },
        Whitespace = { fg = colors.bg },
        VertSplit = { fg = colors.color08, bg = colors.bg },
        CursorLine = { bg = colors.bg },
        CursorColumn = { bg = colors.bg },
        ColorColumn = { bg = colors.bg },
        NormalFloat = { bg = colors.bg },
        FloatBorder = { bg = colors.color00 },
        FloatTitle = { bg = colors.color00 },
        Visual = { bg = colors.color04 },
        VisualNOS = { bg = colors.color00 },
        WarningMsg = { fg = colors.warning, bg = colors.bg },
        DiffAdd = { fg = colors.color00, bg = colors.color02 },
        DiffChange = { fg = colors.color00, bg = colors.color03, italic = config.options.underline },
        DiffDelete = { fg = colors.color00, bg = colors.color01 },
        QuickFixLine = { bg = colors.color04 },
        PmenuSbar = { bg = colors.color00 },
        PmenuThumb = { bg = colors.color08 },
        MatchWord = { italic = config.options.underline },
        MatchParen = { fg = colors.color04, bg = colors.bg, italic = config.options.underline },
        MatchWordCur = { italic = config.options.underline },
        MatchParenCur = { italic = config.options.underline },
        Cursor = { fg = colors.color00, bg = colors.color08 },
        lCursor = { fg = colors.color00, bg = colors.color08 },
        CursorIM = { fg = colors.color00, bg = colors.color08 },
        TermCursor = { fg = colors.color00, bg = colors.color08 },
        TermCursorNC = { fg = colors.color00, bg = colors.color08 },
        Conceal = { fg = colors.color00 },
        Directory = { fg = colors.description },
        SpecialKey = { fg = colors.color04, italic = config.options.bold },
        Title = { fg = colors.color04, italic = config.options.bold },
        ErrorMsg = { fg = colors.error, bg = colors.bg, italic = config.options.bold },
        Search = { fg = colors.color00, bg = colors.color04 },
        IncSearch = { fg = colors.color09, bg = colors.color00 },
        Substitute = { fg = colors.color00, bg = colors.color09 },
        MoreMsg = { fg = colors.color09 },
        Question = { fg = colors.color09 },
        EndOfBuffer = { fg = colors.bg },
        NonText = { fg = colors.bg },
        Variable = { fg = colors.color12 },
        String = { fg = colors.color09 },
        Character = { fg = colors.color09 },
        Constant = { fg = colors.description },
        Number = { fg = colors.color10 },
        Boolean = { fg = colors.color04 },
        Float = { fg = colors.color10 },
        Identifier = { fg = colors.color12 },
        Function = { fg = colors.color03 },
        Operator = { fg = colors.fg },
        Type = { fg = colors.color12 },
        StorageClass = { fg = colors.color04 },
        Structure = { fg = colors.color04 },
        Typedef = { fg = colors.color04 },
        Keyword = { fg = colors.color04 },
        Statement = { fg = colors.color05 },
        Conditional = { fg = colors.color04 },
        Repeat = { fg = colors.color05 },
        Label = { fg = colors.color05 },
        Exception = { fg = colors.color05 },
        Include = { fg = colors.color05 },
        PreProc = { fg = colors.color05 },
        Define = { fg = colors.color05 },
        Macro = { fg = colors.color05 },
        PreCondit = { fg = colors.color05 },
        Special = { fg = colors.color09 },
        SpecialChar = { fg = colors.fg },
        Tag = { fg = colors.color04 },
        Debug = { fg = colors.color01 },
        Delimiter = { fg = colors.color08 },
        SpecialComment = { fg = colors.color08 },
        Underlined = { italic = config.options.underline },
        Bold = { italic = config.options.bold },
        Italic = { italic = config.options.italics },
        Ignore = { fg = colors.color12, bg = colors.bg, italic = config.options.bold },
        Todo = { fg = colors.color13, bg = colors.bg, italic = config.options.bold },
        Error = { fg = colors.error, bg = colors.bg, italic = config.options.bold },
        TabLine = { fg = colors.color00, bg = colors.color07 },
        TabLineSel = { fg = colors.fg, bg = colors.color07 },
        TabLineFill = { fg = colors.color07, bg = colors.color07 },

        -- Git
        SignAdd = { fg = colors.color02 },
        SignChange = { fg = colors.color03 },
        SignDelete = { fg = colors.color01 },
        GitSignsAdd = { fg = colors.color02 },
        GitSignsChange = { fg = colors.color03 },
        GitSignsDelete = { fg = colors.color01 },

        ---- TODO: Revisit colors
        ---- markdown
        --markdownBlockquote = { fg = colors.color02 },
        --markdownCode = { fg = colors.color09 },
        --markdownCodeBlock = { fg = colors.color09 },
        --markdownCodeDelimiter = { fg = colors.color09 },
        --
        --markdownH1 = { fg = colors.color04 },
        --markdownH2 = { fg = colors.color04 },
        --markdownH3 = { fg = colors.color04 },
        --markdownH4 = { fg = colors.color04 },
        --markdownH5 = { fg = colors.color04 },
        --markdownH6 = { fg = colors.color04 },
        --
        --markdownHeadingDelimiter = { fg = colors.color04 },
        --markdownHeadingRule = { fg = colors.fg, italic = config.options.bold },
        --markdownId = { fg = colors.color05 },
        --markdownIdDeclaration = { fg = colors.color04 },
        --markdownIdDelimiter = { fg = colors.color00 },
        --markdownLinkDelimiter = { fg = colors.color00 },
        --markdownBold = { fg = colors.color04, italic = config.options.bold },
        --markdownItalic = { italic = config.options.italics },
        --markdownBoldItalic = { fg = colors.color03, italic = config.options.bold, italic = config.options.italics },
        --markdownListMarker = { fg = colors.color04 },
        --markdownOrderedListMarker = { fg = colors.color04 },
        --markdownRule = { fg = colors.color00 },
        --markdownUrl = { fg = colors.color12, italic = config.options.underline },
        --markdownLinkText = { fg = colors.color04 },
        --markdownFootnote = { fg = colors.color09 },
        --markdownFootnoteDefinition = { fg = colors.color09 },
        --markdownEscape = { fg = colors.color03 },

        RenderMarkdownBullet = { fg = colors.color12 },
        RenderMarkdownDash = { fg = colors.color12 },
        RenderMarkdownCode = { bg = colors.color00 },
        RenderMarkdownTableHead = { fg = colors.color06, bold = config.options.bold },
        RenderMarkdownTableRow = { fg = colors.color06 },

        --RenderMarkdownH1 = { fg = colors.color11 },
        --RenderMarkdownH2 = { fg = colors.color11 },
        --RenderMarkdownH3 = { fg = colors.color11 },
        --RenderMarkdownH4 = { fg = colors.color11 },
        --RenderMarkdownH5 = { fg = colors.color11 },
        --RenderMarkdownH6 = { fg = colors.color11 },
        RenderMarkdownH1Bg = { bg = colors.color00, fg = colors.color02 },
        RenderMarkdownH2Bg = { bg = colors.color00, fg = colors.color02 },
        RenderMarkdownH3Bg = { bg = colors.color00, fg = colors.color02 },
        RenderMarkdownH4Bg = { bg = colors.color00, fg = colors.color02 },
        RenderMarkdownH5Bg = { bg = colors.color00, fg = colors.color02 },
        RenderMarkdownH6Bg = { bg = colors.color00, fg = colors.color02 },

        --RenderMarkdownCodeInline = "@markup.raw.markdown_inline",

        -- TreeSitter
        ["@comment"] = { link = "Comment" },
        ["@none"] = { bg = "NONE", fg = "NONE" },
        ["@preproc"] = { link = "PreProc" },
        ["@define"] = { link = "Define" },
        ["@operator"] = { link = "Operator" },
        ["@punctuation.delimiter"] = { link = "Delimiter" },
        ["@punctuation.bracket"] = { link = "Delimiter" },
        ["@punctuation.special"] = { link = "Delimiter" },
        ["@string"] = { link = "String" },
        ["@string.regex"] = { link = "String" },
        ["@string.regexp"] = { link = "String" },
        ["@string.escape"] = { link = "SpecialChar" },
        ["@string.special"] = { link = "SpecialChar" },
        ["@string.special.path"] = { link = "Underlined" },
        ["@string.special.symbol"] = { link = "Identifier" },
        ["@string.special.url"] = { link = "Underlined" },
        ["@character"] = { link = "Character" },
        ["@character.special"] = { link = "SpecialChar" },
        ["@boolean"] = { link = "Boolean" },
        ["@number"] = { link = "Number" },
        ["@number.float"] = { link = "Float" },
        ["@float"] = { link = "Float" },
        ["@function"] = { link = "Function" },
        ["@function.builtin"] = { link = "Special" },
        ["@function.call"] = { link = "Function" },
        ["@function.macro"] = { link = "Macro" },
        ["@function.method"] = { link = "Function" },
        ["@method"] = { link = "Function" },
        ["@method.call"] = { link = "Function" },
        ["@constructor"] = { link = "Special" },
        ["@parameter"] = { link = "Identifier" },
        ["@keyword"] = { link = "Keyword" },
        ["@keyword.conditional"] = { link = "Conditional" },
        ["@keyword.debug"] = { link = "Debug" },
        ["@keyword.directive"] = { link = "PreProc" },
        ["@keyword.directive.define"] = { link = "Define" },
        ["@keyword.exception"] = { link = "Exception" },
        ["@keyword.function"] = { link = "Keyword" },
        ["@keyword.import"] = { link = "Include" },
        ["@keyword.operator"] = { fg = colors.color09 },
        ["@keyword.repeat"] = { link = "Repeat" },
        ["@keyword.return"] = { link = "Keyword" },
        ["@keyword.storage"] = { link = "StorageClass" },
        ["@conditional"] = { link = "Conditional" },
        ["@repeat"] = { link = "Repeat" },
        ["@debug"] = { link = "Debug" },
        ["@label"] = { link = "Label" },
        ["@include"] = { link = "Include" },
        ["@exception"] = { link = "Exception" },
        ["@type"] = { link = "Type" },
        ["@type.builtin"] = { link = "Type" },
        ["@type.definition"] = { link = "Typedef" },
        ["@type.qualifier"] = { link = "Type" },
        ["@storageclass"] = { link = "StorageClass" },
        ["@attribute"] = { link = "PreProc" },
        ["@field"] = { link = "Identifier" },
        ["@property"] = { link = "Identifier" },
        ["@variable"] = { fg = colors.fg },
        ["@variable.builtin"] = { link = "Special" },
        ["@variable.member"] = { link = "Identifier" },
        ["@variable.parameter"] = { link = "Identifier" },
        ["@constant"] = { link = "Constant" },
        ["@constant.builtin"] = { link = "Special" },
        ["@constant.macro"] = { link = "Define" },
        ["@markup"] = { fg = colors.fg },
        ["@markup.strong"] = { italic = config.options.bold },
        ["@markup.emphasis"] = { italic = config.options.italics },
        ["@markup.underline"] = { italic = config.options.underline },
        ["@markup.strike"] = { italic = config.options.strikethrough },
        ["@markup.heading"] = { link = "Title" },
        ["@markup.raw"] = { link = "String" },
        ["@markup.math"] = { link = "Special" },
        ["@markup.environment"] = { link = "Macro" },
        ["@markup.environment.name"] = { link = "Type" },
        ["@markup.link"] = { link = "Underlined" },
        ["@markup.link.label"] = { link = "SpecialChar" },
        ["@markup.list"] = { link = "Delimiter" },
        ["@markup.list.checked"] = { fg = colors.color06 },
        ["@markup.list.unchecked"] = { fg = colors.color07 },
        ["@comment.todo"] = { link = "Todo" },
        ["@comment.note"] = { link = "SpecialComment" },
        ["@comment.warning"] = { link = "WarningMsg" },
        ["@comment.error"] = { link = "ErrorMsg" },
        ["@diff.plus"] = { link = "SignAdd" },
        ["@diff.minus"] = { link = "SignDelete" },
        ["@diff.delta"] = { link = "SignChange" },
        ["@module"] = { fg = colors.fg },
        ["@namespace"] = { fg = colors.fg },
        ["@symbol"] = { link = "Identifier" },
        ["@text"] = { fg = colors.fg },
        ["@text.strong"] = { italic = config.options.bold },
        ["@text.emphasis"] = { italic = config.options.italics },
        ["@text.underline"] = { italic = config.options.underline },
        ["@text.strike"] = { italic = config.options.strikethrough },
        ["@text.title"] = { link = "Title" },
        ["@text.literal"] = { link = "String" },
        ["@text.uri"] = { link = "Underlined" },
        ["@text.math"] = { link = "Special" },
        ["@text.environment"] = { link = "Macro" },
        ["@text.environment.name"] = { link = "Type" },
        ["@text.reference"] = { link = "Constant" },
        ["@text.todo"] = { link = "Todo" },
        ["@text.todo.checked"] = { fg = colors.color06 },
        ["@text.todo.unchecked"] = { fg = colors.color07 },
        ["@text.note"] = { link = "SpecialComment" },
        ["@text.note.comment"] = { fg = colors.color05, italic = config.options.bold },
        ["@text.warning"] = { link = "WarningMsg" },
        ["@text.danger"] = { link = "ErrorMsg" },
        ["@text.danger.comment"] = { fg = colors.fg, bg = colors.color01, italic = config.options.bold },
        ["@text.diff.add"] = { link = "SignAdd" },
        ["@text.diff.delete"] = { link = "SignDelete" },
        ["@tag"] = { link = "Tag" },
        ["@tag.attribute"] = { link = "Identifier" },
        ["@tag.delimiter"] = { link = "Delimiter" },
        ["@punctuation"] = { link = "Delimiter" },
        ["@macro"] = { link = "Macro" },
        ["@structure"] = { link = "Structure" },
        ["@lsp.type.class"] = { link = "@type" },
        ["@lsp.type.comment"] = { link = "@comment" },
        ["@lsp.type.decorator"] = { link = "@macro" },
        ["@lsp.type.enum"] = { link = "@type" },
        ["@lsp.type.enumMember"] = { link = "@constant" },
        ["@lsp.type.function"] = { link = "@function" },
        ["@lsp.type.interface"] = { link = "@constructor" },
        ["@lsp.type.macro"] = { link = "@macro" },
        ["@lsp.type.method"] = { link = "@method" },
        ["@lsp.type.namespace"] = { link = "@namespace" },
        ["@lsp.type.parameter"] = { link = "@parameter" },
        ["@lsp.type.property"] = { link = "@property" },
        ["@lsp.type.struct"] = { link = "@type" },
        ["@lsp.type.type"] = { link = "@type" },
        ["@lsp.type.typeParameter"] = { link = "@type.definition" },
        ["@lsp.type.field"] = { link = "@variable.member" },
        ["@lsp.type.variable"] = { link = "@variable" },
        TreesitterContext = { bg = colors.bg },

        -- LSP
        LspDiagnosticsDefaultError = { fg = colors.error },
        LspDiagnosticsDefaultWarning = { fg = colors.warning },
        LspDiagnosticsDefaultInformation = { fg = colors.info },
        LspDiagnosticsDefaultInfo = { fg = colors.info },
        LspDiagnosticsDefaultHint = { fg = colors.hint },
        LspDiagnosticsVirtualTextError = { fg = colors.error },
        LspDiagnosticsVirtualTextWarning = { fg = colors.warning },
        LspDiagnosticsVirtualTextInformation = { fg = colors.info },
        LspDiagnosticsVirtualTextInfo = { fg = colors.info },
        LspDiagnosticsVirtualTextHint = { fg = colors.hint },
        LspDiagnosticsFloatingError = { fg = colors.error },
        LspDiagnosticsFloatingWarning = { fg = colors.warning },
        LspDiagnosticsFloatingInformation = { fg = colors.info },
        LspDiagnosticsFloatingInfo = { fg = colors.info },
        LspDiagnosticsFloatingHint = { fg = colors.hint },

        DiagnosticError = { fg = colors.error },
        DiagnosticWarn = { fg = colors.warning },
        DiagnosticInfo = { fg = colors.info },
        DiagnosticHint = { fg = colors.hint },
        DiagnosticUnnecessary = { fg = colors.bg },
        DiagnosticSignError = { fg = colors.error },
        DiagnosticSignWarning = { fg = colors.warning },
        DiagnosticSignInformation = { fg = colors.info },
        DiagnosticSignInfo = { fg = colors.info },
        DiagnosticSignHint = { fg = colors.hint },
        DiagnosticUnderlineError = { sp = colors.error, undercurl = config.options.undercurl },
        DiagnosticUnderlineWarn = { sp = colors.warning, undercurl = config.options.undercurl },
        DiagnosticUnderlineInfo = { sp = colors.info, undercurl = config.options.undercurl },
        DiagnosticUnderlineHint = { sp = colors.hint, undercurl = config.options.undercurl },

        LspDiagnosticsSignError = { fg = colors.error },
        LspDiagnosticsSignWarning = { fg = colors.warning },
        LspDiagnosticsSignInformation = { fg = colors.info },
        LspDiagnosticsSignInfo = { fg = colors.info },
        LspDiagnosticsSignHint = { fg = colors.hint },
        LspDiagnosticsError = { fg = colors.error },
        LspDiagnosticsWarning = { fg = colors.warning },
        LspDiagnosticsInformation = { fg = colors.info },
        LspDiagnosticsInfo = { fg = colors.info },
        LspDiagnosticsHint = { fg = colors.hint },
        LspDiagnosticsUnderlineError = { italic = config.options.underline, undercurl = config.options.undercurl },
        LspDiagnosticsUnderlineWarning = { italic = config.options.underline, undercurl = config.options.undercurl },
        LspDiagnosticsUnderlineInformation = { italic = config.options.underline, undercurl = config.options.undercurl },
        LspDiagnosticsUnderlineInfo = { italic = config.options.underline, undercurl = config.options.undercurl },
        LspDiagnosticsUnderlineHint = { italic = config.options.underline, undercurl = config.options.undercurl },
        LspReferenceRead = { fg = colors.color08 },
        LspReferenceText = { fg = colors.color08 },
        LspReferenceWrite = { fg = colors.color08 },
        LspCodeLens = { fg = colors.color08, italic = config.options.italics },
        LspCodeLensSeparator = { fg = colors.color08, italic = config.options.italics },

        -- LspTrouble
        TroubleText = { fg = colors.fg },
        TroubleCount = { fg = colors.color05, bg = colors.bg },
        TroubleNormal = { fg = colors.fg, bg = colors.bg },

        -- Telescope
        TelescopeSelection = { fg = colors.color04 },
        TelescopeMatching = { fg = colors.color03, italic = config.options.bold },
        TelescopeBorder = { fg = colors.color04, bg = colors.bg },

        -- NvimTree
        NvimTreeFolderIcon = { fg = colors.color04 },
        NvimTreeIndentMarker = { fg = colors.color07 },
        NvimTreeNormal = { fg = colors.color00, bg = colors.color07 },
        NvimTreeVertSplit = { fg = colors.color00, bg = colors.color00 },
        NvimTreeFolderName = { fg = colors.color04 },
        NvimTreeOpenedFolderName = {
            fg = colors.color04,
            italic = config.options.bold,
            italic = config.options.italics,
        },
        NvimTreeEmptyFolderName = { fg = colors.color08, italic = config.options.italics },
        NvimTreeGitIgnored = { fg = colors.color08, italic = config.options.italics },
        NvimTreeImageFile = { fg = colors.color00 },
        NvimTreeSpecialFile = { fg = colors.color09 },
        NvimTreeEndOfBuffer = { fg = colors.color07 },
        NvimTreeCursorLine = { bg = colors.color00 },
        NvimTreeGitignoreIcon = { fg = colors.color09 },
        NvimTreeGitStaged = { fg = colors.color02 },
        NvimTreeGitNew = { fg = colors.color02 },
        NvimTreeGitRenamed = { fg = colors.color02 },
        NvimTreeGitDeleted = { fg = colors.color01 },
        NvimTreeGitMerge = { fg = colors.color03 },
        NvimTreeGitDirty = { fg = colors.color03 },
        NvimTreeSymlink = { fg = colors.color12 },
        NvimTreeRootFolder = { fg = colors.fg, italic = config.options.bold },
        NvimTreeExecFile = { fg = colors.color10 },

        -- Buffer
        BufferCurrent = { fg = colors.fg, bg = colors.bg },
        BufferCurrentIndex = { fg = colors.fg, bg = colors.bg },
        BufferCurrentMod = { fg = colors.color03, bg = colors.bg },
        BufferCurrentSign = { fg = colors.color04, bg = colors.bg },
        BufferCurrentTarget = { fg = colors.color01, bg = colors.bg, italic = config.options.bold },
        BufferVisible = { fg = colors.fg, bg = colors.bg },
        BufferVisibleIndex = { fg = colors.fg, bg = colors.bg },
        BufferVisibleMod = { fg = colors.color03, bg = colors.bg },
        BufferVisibleSign = { fg = colors.color08, bg = colors.bg },
        BufferVisibleTarget = { fg = colors.color01, bg = colors.bg, italic = config.options.bold },
        BufferInactive = { fg = colors.color08, bg = colors.color00 },
        BufferInactiveIndex = { fg = colors.color08, bg = colors.color00 },
        BufferInactiveMod = { fg = colors.color03, bg = colors.color00 },
        BufferInactiveSign = { fg = colors.color08, bg = colors.color00 },
        BufferInactiveTarget = { fg = colors.color01, bg = colors.color00, italic = config.options.bold },

        -- StatusLine
        StatusLine = { fg = colors.color08, bg = colors.color00 },
        StatusLineNC = { fg = colors.color08, bg = colors.color00 },
        StatusLineSeparator = { fg = colors.color08 },
        StatusLineTerm = { fg = colors.color08 },
        StatusLineTermNC = { fg = colors.color08 },

        -- IndentBlankline
        IndentBlanklineContextChar = { fg = colors.color08 },
        IndentBlanklineContextStart = { italic = config.options.underline },
        IndentBlanklineChar = { fg = colors.color00 },
        IndentBlanklineSpaceChar = { fg = colors.color12 },
        IndentBlanklineSpaceCharBlankline = { fg = colors.color03 },

        -- Dashboard
        DashboardCenter = { fg = colors.color05 },
        DashboardDesc = { fg = colors.color08 },
        DashboardFooter = { fg = colors.color12 },
        DashboardHeader = { fg = colors.color04 },
        DashboardIcon = { fg = colors.color08, italic = config.options.bold },
        DashboardKey = { fg = colors.color09 },
        DashboardShortCut = { fg = colors.color09 },

        -- Cmp
        CmpItemAbbrDeprecated = { fg = colors.color08, italic = config.options.strikethrough },
        CmpItemAbbrMatch = { fg = colors.color04 },
        CmpItemAbbrMatchFuzzy = { fg = colors.color04 },
        CmpItemKindFunction = { fg = colors.color04 },
        CmpItemKindMethod = { fg = colors.color04 },
        CmpItemKindConstructor = { fg = colors.color12 },
        CmpItemKindClass = { fg = colors.color12 },
        CmpItemKindEnum = { fg = colors.color12 },
        CmpItemKindEvent = { fg = colors.color03 },
        CmpItemKindInterface = { fg = colors.color12 },
        CmpItemKindStruct = { fg = colors.color12 },
        CmpItemKindVariable = { fg = colors.color01 },
        CmpItemKindField = { fg = colors.color01 },
        CmpItemKindProperty = { fg = colors.color01 },
        CmpItemKindEnumMember = { fg = colors.color09 },
        CmpItemKindConstant = { fg = colors.color09 },
        CmpItemKindKeyword = { fg = colors.color05 },
        CmpItemKindModule = { fg = colors.color12 },
        CmpItemKindValue = { fg = colors.fg },
        CmpItemKindUnit = { fg = colors.fg },
        CmpItemKindText = { fg = colors.fg },
        CmpItemKindSnippet = { fg = colors.color03 },
        CmpItemKindFile = { fg = colors.fg },
        CmpItemKindFolder = { fg = colors.fg },
        CmpItemKindColor = { fg = colors.fg },
        CmpItemKindReference = { fg = colors.fg },
        CmpItemKindOperator = { fg = colors.fg },
        CmpItemKindTypeParameter = { fg = colors.color01 },
    }

    for highlight, parameters in pairs(highlights) do
        vim.api.nvim_set_hl(0, highlight, parameters)
    end
end

function Highlights.set_terminal_colors(colors)
    vim.g.terminal_color_0 = colors.color00
    vim.g.terminal_color_1 = colors.color01
    vim.g.terminal_color_2 = colors.color02
    vim.g.terminal_color_3 = colors.color03
    vim.g.terminal_color_4 = colors.color04
    vim.g.terminal_color_5 = colors.color05
    vim.g.terminal_color_6 = colors.color06
    vim.g.terminal_color_7 = colors.color07
    vim.g.terminal_color_8 = colors.color08
    vim.g.terminal_color_9 = colors.color09
    vim.g.terminal_color_10 = colors.color10
    vim.g.terminal_color_11 = colors.color11
    vim.g.terminal_color_12 = colors.color12
    vim.g.terminal_color_13 = colors.color13
    vim.g.terminal_color_14 = colors.color14
    vim.g.terminal_color_15 = colors.color15
    vim.g.terminal_color_background = colors.bg
    vim.g.terminal_color_foreground = colors.fg
end

return Highlights
